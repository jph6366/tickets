<?php
/*
9/10/10 Module Installation Script
3/15/11 changed stylesheet.php to stylesheet.php
*/

@session_start();

require_once($_SESSION['fip']);
error_reporting(E_ALL);				// 2/3/09
do_login(basename(__FILE__));	// session_start()
$tickets_dir = getcwd();	
?>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
<META HTTP-EQUIV="Expires" CONTENT="0">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-cache">
<META HTTP-EQUIV="Pragma" CONTENT="NO-CACHE">
<META HTTP-EQUIV="Content-Script-Type"	CONTENT="text/javascript">
<LINK REL=StyleSheet HREF="stylesheet.php" TYPE="text/css" />	<!-- 3/15/11 -->
</HEAD><BODY>

<?php

function module_tabs_exist($name) {
	$query 		= "SELECT COUNT(*) FROM `$GLOBALS[mysql_prefix]modules`";
	$result 	= mysql_query($query);
	$num_rows 	= @mysql_num_rows($result);
	if($num_rows) {
		$query_exists	= "SELECT * FROM `$GLOBALS[mysql_prefix]modules` WHERE `mod_name`=\"{$name}\"";
		$result_exists	= mysql_query($query_exists) or do_error($query_exists, 'mysql_query() failed', mysql_error(), __FILE__, __LINE__);
		$num_rows = mysql_num_rows($result_exists);
		if($num_rows != 0) {
			return 1;
		} else {
			return 0;
		}	
		} else {
		return 0;
		}
	}
	
function mod_table_exists($tablename) {			//check if mysql table exists, if it's a re-install
	$query 		= "SELECT COUNT(*) FROM $tablename";
	$result 	= mysql_query($query);
	$num_rows 	= @mysql_num_rows($result);
	if($num_rows) {
		return 1;
	} else {
		return 0;
	}
	}
	

function unzip($file){
    $zip=zip_open($file);

    if(!$zip) {return("Unable to proccess file '{$file}'");}

    $e='';

    while($zip_entry=zip_read($zip)) {
		$zdir=dirname(zip_entry_name($zip_entry));
		$zname=zip_entry_name($zip_entry);

		if(!zip_entry_open($zip,$zip_entry,"r")) {$e.="Unable to proccess file '{$zname}'";continue;}
		if(!is_dir($zdir)) mkdirr($zdir,0777);

		$zip_fs=zip_entry_filesize($zip_entry);
		if(empty($zip_fs)) continue;

		$zz=zip_entry_read($zip_entry,$zip_fs);

		$z=fopen($zname,"w");
		fwrite($z,$zz);
		fclose($z);
		zip_entry_close($zip_entry);
    } 
    zip_close($zip);

    return($e);
} 

function unzip_structurefile($file){

	$zip=zip_open($file);

	if(!$zip) {return("Unable to proccess file '{$file}'");}

	$e='';

	while($zip_entry=zip_read($zip)) {
		$zdir=dirname(zip_entry_name($zip_entry));
		$zname=zip_entry_name($zip_entry);

		if(!zip_entry_open($zip,$zip_entry,"r")) {$e.="Unable to proccess file '{$zname}'";continue;}
		if($zname=="structure.xml") {
			$zip_fs=zip_entry_filesize($zip_entry);
			if(empty($zip_fs)) continue;

			$zz=zip_entry_read($zip_entry,$zip_fs);

			$z=fopen($zname,"w");
			fwrite($z,$zz);
			fclose($z);
			zip_entry_close($zip_entry);
			}
		} 
	zip_close($zip);

	return($e);
} 

function mkdirr($pn,$mode=null) {

	if(is_dir($pn)||empty($pn)) return true;
	$pn=str_replace(array('/', ''),DIRECTORY_SEPARATOR,$pn);

	if(is_file($pn)) {trigger_error('mkdirr() File exists', E_USER_WARNING);return false;}

	$next_pathname=substr($pn,0,strrpos($pn,DIRECTORY_SEPARATOR));
	if(mkdirr($next_pathname,$mode)) {if(!file_exists($pn)) {return mkdir($pn,$mode);} }
	return false;
}

function get_structure($structurefile) {
	$xml_file = "./structure.xml";
	$data="";
	if (function_exists("curl_init")) {
		$ch = curl_init();
		$timeout = 5;
		curl_setopt($ch, CURLOPT_URL, $xml_file);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
		$data = curl_exec($ch);
		curl_close($ch);
		}
	else {				// not CURL
		if ($fp = @fopen($xml_file, "r")) {
			while (!feof($fp) && (strlen($data)<9000)) $data .= fgets($fp, 128);
			fclose($fp);
			}		
		else {
			print "-error " . __LINE__;		// @fopen fails
			}
	}
	return $data;
	}	// end function get_structure
	
function write_path($filepath, $tickets_dir) {
	global $docRoot, $tickets_dir;
	if (!$fp = fopen($tickets_dir.$filepath . '/path.inc.php', 'a')) {
       	print '<LI> <FONT CLASS="warn">Cannot open path.inc.php for writing</FONT>';
	} else {
		ftruncate($fp,0);			
		fwrite($fp, "<?php\n");
		fwrite($fp, "	/* generated by '" . basename( __FILE__) . "' " . date('r') . " */\n");
		fwrite($fp, '	$tickets_root 	= '."'$tickets_dir';\n");
		fwrite($fp, '?>');
	}

	fclose($fp);
	print '<LI> Wrote Data Path URL<BR />';
	}	

if (isset($_POST['submit'])) { // Handle the form.

	print "<DIV style='background-color:#CECECE; position: absolute; width: 60%; height: 60%; left: 20%; top: 10%; border:2px inset #FFF2BF; display: block; text-align: center'>";

	$upload_directory = "tmp_uploads";	// check that temporary uploads directory exists
	if (!(file_exists($upload_directory))) {
		mkdir ($upload_directory, 0777);
		chmod($upload_directory, 0777);		
		}

	chmod($upload_directory, 0777);			
	$filename = $_FILES['upload']['name'];
	$temp_dir="./tmp_uploads/";
	
	if (move_uploaded_file($_FILES['upload']['tmp_name'], $temp_dir . "$filename")) {	// If file uploaded OK
		$file = $temp_dir . "/" . $filename;
		unzip_structurefile($file);
		$structurefile = "structure.xml";
//		$data = get_structure($structurefile);
		$xml = simplexml_load_file($structurefile);
					
	//	Read XML file for details of structure and other information.
		
		$modname = $xml->name;
		$author = $xml->author;
		$created = $xml->creationDate;
		$version = $xml->version;
		$description = $xml->description;
		$directoryname = $xml->directories->directoryname;
		print $directoryname;
		$tablename = $xml->tables->tablename;		
		$installfile = $xml->configuration->installfile;
		$installfile = "./" . $installfile;
		$modincsdir = $xml->directories->incsdirectoryname;
		$modincsdir = "/" . $modincsdir;
	
		$module_dir = $directoryname;
		$mod_entry_exists = module_tabs_exist($modname); // if a table entry aready exists for the module
		$mod_table_exists = mod_table_exists($tablename);

		if ((file_exists($module_dir)) && ($mod_entry_exists==1) && ($mod_table_exists==1)) { // checks fully functioning previous existance of module.
		   echo "The Module Directory and tables already exist. Please remove existing versions before installing a new one"; 
		} else { 
			unzip($file);
			write_path($modincsdir, $tickets_dir);	

		// Print out Module details

			print "Module Name; "; print $modname; print "<BR />";
			print "Module Directory; "; print $directoryname; print "<BR />";	
			print "Author: "; print $author; print "<BR />";
			print "Created: "; print $created; print "<BR />";
			print "Version: "; print $version; print "<BR />";
			print "Description: "; print $description; print "<BR />";

		//	fclose($structurefile);	
			unlink($structurefile);

			print "<A HREF=$installfile><< Configure Module >></A>";
			print "</DIV>";
		}	// end if module exists
		} else {
		echo '<p>The file upload failed.</p>';
	}	// end if file uploaded
	chmod($upload_directory, 0400);
	
} else { // If form not submitted print form.
?>
	<DIV style='background-color:#CECECE; position: absolute; width: 60%; height: 60%; left: 20%; top: 10%; border:2px inset #FFF2BF; display: block'>	
	<center>TICKETS MODULES INSTALLATION.</center>
	<DIV style='background-color:#CECECE; position: absolute; width: 40%; height: 20%; left: 5%; top: 10%; border:2px inset #FFF2BF; display: block'>
	<TABLE BORDER="0">
	<TH COLSPAN="2">Upload a new Tickets module<BR /></TH>
	<FORM enctype="multipart/form-data" action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
	<input type="hidden" name="MAX_FILE_SIZE" value="10000000">
	<fieldset>
	<TR CLASS="even"><TD>File:</TD><TD><input type="file" name="upload" /></TD></fieldset>
	<TR CLASS="even"><TD COLSPAN="2" ALIGN="center"><input type="submit" name="submit" value="Submit" /></TD></TR>
	</FORM></TABLE>
	</div>
	<DIV style='background-color:#CECECE; position: absolute; width: 50%; height: 80%; right: 5%; top: 10%; border:2px inset #FFF2BF; display: block'>
	HELP PANEL
	</DIV>
	</DIV>
	<?php
	}
?>
